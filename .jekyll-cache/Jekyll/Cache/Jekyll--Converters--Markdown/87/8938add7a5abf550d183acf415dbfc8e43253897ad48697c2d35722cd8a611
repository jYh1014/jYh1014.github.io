I"	<h2 id="解决了什么问题">解决了什么问题</h2>

<ul>
  <li>函数组件内部没状态的问题</li>
  <li>
    <h2 id="注意事项">注意事项</h2>
  </li>
  <li>只能在函数最外层调用 Hook。不要在循环、条件判断或者子函数中调用。</li>
  <li>只能在 React 的函数组件中调用 Hook。不要在其他 JavaScript 函数中调用
    <ul>
      <li>每个hook的调用都会对应一个全局的index索引，通过这个索引去当前组件上的hookState数组里对应的索引找数据。每次渲染完成后都会将index清零。</li>
    </ul>
  </li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td> --><td class="rouge-code"><pre><span class="c1">// 当前正在运行的组件</span>
<span class="kd">let</span> <span class="nx">currentComponent</span>
 
<span class="c1">// 当前 hook 的全局索引</span>
<span class="kd">let</span> <span class="nx">currentIndex</span>
 
<span class="c1">// 第一次调用 currentIndex 为 0</span>
<span class="k">if</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">useState</span><span class="p">(</span><span class="dl">'</span><span class="s1">first</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>
 
<span class="c1">// 第二次调用 currentIndex 为 1</span>
<span class="nx">useState</span><span class="p">(</span><span class="dl">'</span><span class="s1">second</span><span class="dl">'</span><span class="p">)</span>
<span class="c1">//第一次渲染的时候随机值为0.6，那第一个hook会执行，对应的下标是0.第二次渲染的时候随机值为0.1，那么第二个hook会执行，对应的下标是0他会去hookState数组里下标是0的索引里找数据，这样就错乱了，他本应该找的下标是1</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="usestate">useState</h2>

<h2 id="memo">memo</h2>

<ul>
  <li></li>
</ul>
:ET