[ { "title": "第一篇博客", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "js", "date": "2020-10-15 15:20:00 +0800", "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _post/ of the root directory. Please note that the EXTENSION must be one of md and markdown. From v2.4.1, you can create sub-directories under _posts/ to categorize posts.Front MatterBasically, you need to fill th..." }, { "title": "promise原理", "url": "/posts/promise/", "categories": "", "tags": "js", "date": "2020-10-15 15:20:00 +0800", "snippet": "promise介绍 1.promise是什么? promise对象是一个构造函数。 2.promise的应用场景 Promise 是异步编程的一种解决方案。主要是为了解决回调地狱的问题。下面来看个回调嵌套的小例子：fs.readFile(&quot;name.txt&quot;, &quot;utf8&quot;, function(err,data){ if(data){ fs.readFile(data, &quot;utf8&quot;, function(err1,data1){ // console.log(err1,data1) ..." }, { "title": "leetcode解题", "url": "/posts/leetcode/", "categories": "", "tags": "js", "date": "2020-10-15 15:20:00 +0800", "snippet": "283. 移动零给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。示例：输入: [0,1,0,3,12]输出: [1,3,12,0,0] 必须在原数组上操作，不能拷贝额外的数组。 尽量减少操作次数。 /** * @param {number[]} nums * @return {void} Do not return anything, modify nums in-place instead. */var moveZeroes = function(nums) { var j = 0; for(var i = 0..." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2019-08-09 20:55:00 +0800", "snippet": "InstallationFork Chirpy on GitHub, rename the repository to USERNAME.github.io (where USERNAME is your GitHub username), and then open terminal and clone the fork to local by:$ git clone https://github.com/USERNAME/USERNAME.github.io.git -b master --single-branchSetting up the local envrionmentIf..." } ]
